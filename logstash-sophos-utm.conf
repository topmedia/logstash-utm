input {
  file {
    path => "/Users/patrick/demo/logstash/input/packetfilter*.log"
    type => "packetfilter"
    start_position => "beginning"
  }

  file {
    path => "/Users/patrick/demo/logstash/input/http*.log"
    type => "webfilter"
    start_position => "beginning"
  }
}

filter {
  if [type] == "packetfilter" {
    grok {
      match => [ "message", "%{NOTSPACE:timestamp}.*(?:action=\"%{WORD:action}\").*(?:initf=\"%{WORD:in_interface}\").*(?:srcip=\"%{IP:source_ip}\").*(?:dstip=\"%{IP:dest_ip}\").*(?:srcport=\"%{NUMBER:source_port}\").*(?:dstport=\"%{NUMBER:dest_port}\")"]
    }

    geoip {
      source => "source_ip"
    }
  } else if [type] == "webfilter" {
    grok {
      match => [ "message", "%{NOTSPACE:timestamp}.*(?:action=\"%{WORD:action}\").*(?:method=\"%{WORD:method}\").*(?:srcip=\"%{IP:source_ip}\").*(?:dstip=\"%{IP:dest_ip}\").*(?:user=%{QS:user}).*(?:statuscode=\"%{NUMBER:status_code}\").*(?:profile=%{QS:profile}).*(?:filteraction=%{QS:filter_action}).*(?:size=\"%{NUMBER:size}\").*(?:url=\"%{URIPROTO}://(?:%{USER}(?::[^@]*)?@)?(?:%{URIHOST:dest_host})?(?:%{URIPATHPARAM})?\").*(?:fullreqtime=\"%{NUMBER:req_time}\").*(?:reputation=\"%{WORD:reputation}\").*(?:categoryname=%{QS:category_name})"]
    }

    geoip {
      source => "dest_ip"
    }
    mutate {
      gsub => [
        'user', '"', '',
        'profile', '"', '',
        'filter_action', '"', '',
        'category_name', '"', ''
      ]
    }
  }

  date {
    match => [ "timestamp", "YYYY:MM:dd-HH:mm:ss"]
  }

  if ("_grokparsefailure" in [tags]) {
    drop {}
  }
}

output {
  elasticsearch {
    host => "localhost"
    port => "9200"
    index => "utm"
    protocol => "http"
    template => "/Users/patrick/demo/logstash/template.json"
    template_name => "utm"
    template_overwrite => true
  }
}
