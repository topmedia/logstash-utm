input {
  file {
    path => "${PWD}/input/packetfilter*.log"
    type => "packetfilter"
    start_position => "beginning"
  }

  file {
    path => "${PWD}/input/http*.log"
    type => "webfilter"
    start_position => "beginning"
  }
}

filter {
  grok {
    match => [ "message", "^%{NOTSPACE:timestamp}" ]
  }

  date {
    match => [ "timestamp", "YYYY:MM:dd-HH:mm:ss"]
  }

  kv {
    trim => "\""
  }

  if [id] == "0003" {
    drop {}
  }

  mutate {
    split => {
      "category_name" => ","
    }
    rename => {
      "initf" => "in_interface"
      "srcip" => "source_ip"
      "dstip" => "dest_ip"
      "srcport" => "source_port"
      "dstport" => "dest_port"
      "statuscode" => "status_code"
      "filteraction" => "filter_action"
      "fullreqtime" => "req_time"
      "categoryname" => "category_name"
    }
  }

  if [type] == "packetfilter" {
    geoip {
      source => "source_ip"
    }
  } else if [type] == "webfilter" {
    grok {
      match => [ "url", "%{URIPROTO}://(?:%{USER}(?::[^@]*)?@)?(?:%{IPORHOST:dest_host})" ]
    }

    if [dest_ip] == "" {
      mutate { remove_field => [ "dest_ip" ] }
    } else {
      geoip {
        source => "dest_ip"
      }
    }
  }

  if ("_grokparsefailure" in [tags]) {
    drop {}
  }
}

output {
  elasticsearch {
    hosts => ["localhost:9200"]
    index => "utm"
    template => "template.json"
    template_name => "utm"
    template_overwrite => true
  }
}
